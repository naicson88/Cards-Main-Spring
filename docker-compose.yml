version: '3.8'
networks:
  aw-network:
    driver: bridge

services:
  sonarqube:
    image: sonarqube:community
    depends_on:
      - db
    environment:
      SONAR_JDBC_URL: jdbc:postgresql://db:5432/sonar
      SONAR_JDBC_USERNAME: sonar
      SONAR_JDBC_PASSWORD: sonar
    volumes:
      - sonarqube_data:/opt/sonarqube/data
      - sonarqube_extensions:/opt/sonarqube/extensions
      - sonarqube_logs:/opt/sonarqube/logs
    ports:
      - "9000:9000"
    db:
      image: postgres:12
      environment:
        POSTGRES_USER: sonar
        POSTGRES_PASSWORD: sonar
      volumes:
        - postgresql:/var/lib/postgresql
        - postgresql_data:/var/lib/postgresql/data

  jenkins:
    image: jenkins/jenkins:2.332.3-jdk11
    privileged: true
    user: root
    ports:
     - 8880:8080
     - 50000:50000
    container_name: jenkins
    volumes:
      - ~/jenkins:/var/jenkins_home
      - /var/run/docker.sock:/var/run/docker.sock
      - /usr/local/bin/docker:/usr/local/bin/docker

  prometheus:
    image: prom/prometheus:latest
    volumes:
      - ./src/main/resources/prometheus.yml:/etc/prometheus/prometheus.yml
      - prometheus_data:/prometheus
    networks:
      - aw-network
    ports:
      - 9090:9090

  grafana:
    image: grafana/grafana:8.2.0
    ports:
      - 3000:3000
    networks:
      - aw-network
  
  redis:
    image: redis:6.2-alpine
    ports:
      - '6379:6379'
    command: redis-server --save 20 1 --loglevel warning --requirepass eYVX7EwVmmxKPCDmwMtyKVge8oLd2t81
    volumes:
      - redis:/data

volumes:
  sonarqube_data:
  sonarqube_extensions:
  sonarqube_logs:
  postgresql:
  postgresql_data:
  prometheus_data:
  grafana_data:
  redis:
    driver: local